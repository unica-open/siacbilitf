Index: src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcSOAPService.java
===================================================================
--- src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcSOAPService.java	(revision 10906)
+++ src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcSOAPService.java	(working copy)
@@ -2,11 +2,11 @@
 
 import java.net.MalformedURLException;
 import java.net.URL;
+
 import javax.xml.namespace.QName;
+import javax.xml.ws.Service;
 import javax.xml.ws.WebEndpoint;
-import javax.xml.ws.WebServiceClient;
 import javax.xml.ws.WebServiceFeature;
-import javax.xml.ws.Service;
 
 /**
  * This class was generated by Apache CXF 2.4.6
@@ -21,12 +21,13 @@
 
     public final static URL WSDL_LOCATION;
 
-    public final static QName SERVICE = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcSOAPService");
-    public final static QName MarcSOAP = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcSOAP");
+    public final static QName SERVICE = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcProxyService");
+    public final static QName MarcSOAP = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcProxyServiceHttpSoap11Endpoint");
     static {
         URL url = null;
         try {
-            url = new URL("file:/D:/workarea/csi/siac/fase19/documentazione/INTEGRAZIONE%20PCC%2021102015/Interfacce%20WSNew/MarcServices.wsdl");
+            //url = new URL("file:/D:/workarea/csi/siac/fase19/documentazione/INTEGRAZIONE%20PCC%2021102015/Interfacce%20WSNew/MarcServices.wsdl");
+            url = new URL("http://tst-srv-marc.bilancio.csi.it/wso004/services/MarcProxyService?wsdl");
         } catch (MalformedURLException e) {
             java.util.logging.Logger.getLogger(MarcSOAPService.class.getName())
                 .log(java.util.logging.Level.INFO, 
Index: src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType.java
===================================================================
--- src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType.java	(revision 10906)
+++ src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType.java	(working copy)
@@ -1,16 +1,18 @@
 package it.csi.siac.pcc.marc.services.webservices_1_0;
 
-import it.csi.siac.pcc.marc.schema.marccommontypes_1.ResultType;
-import it.csi.siac.pcc.marc.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo;
-
 import javax.jws.WebMethod;
 import javax.jws.WebParam;
 import javax.jws.WebResult;
 import javax.jws.WebService;
+import javax.jws.soap.SOAPBinding;
 import javax.xml.bind.annotation.XmlSeeAlso;
+import javax.xml.ws.BindingType;
 import javax.xml.ws.RequestWrapper;
 import javax.xml.ws.ResponseWrapper;
 
+import it.csi.siac.pcc.marc.schema.marccommontypes_1.ResponseType;
+import it.csi.siac.pcc.marc.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo;
+
 /**
  *  Interfaccia del servizio MARC invioOperazioneContabile.
  *  
@@ -18,8 +20,8 @@
  */
 @WebService(targetNamespace = "http://www.csi.it/marc/services/webservices-1.0", name = "MarcProxyService",  portName="MarcProxyServiceHttpSoap11Endpoint") 
 @XmlSeeAlso({it.csi.siac.pcc.marc.tesoro.fatture.ObjectFactory.class, it.csi.siac.pcc.marc.schema.marccommontypes_1.ObjectFactory.class, it.csi.siac.pcc.marc.schema.marcservicestypes_1.ObjectFactory.class})
-//@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
-//@BindingType(javax.xml.ws.soap.SOAPBinding.SOAP12HTTP_BINDING)
+@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
+@BindingType(javax.xml.ws.soap.SOAPBinding.SOAP11HTTP_BINDING)
 public interface MarcWSPortType {
 
     @WebResult(name = "Result", targetNamespace = "http://www.csi.it/marc/schema/MarcCommonTypes-1.0")
@@ -29,7 +31,7 @@
     				targetNamespace = "http://www.csi.it/marc/schema/MarcServicesTypes-1.0", 
     				className = "it.csi.siac.pcc.marc.schema.marccommontypes_1.ResponseType"
     				)
-    public ResultType invioOperazioneContabile(
+    public ResponseType invioOperazioneContabile(
         @WebParam(name = "DatiRichiestaOperazioneContabile", targetNamespace = "http://www.csi.it/marc/schema/MarcServicesTypes-1.0")
         ProxyOperazioneContabileRichiestaTipo datiRichiestaOperazioneContabile
     );
Index: src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortTypeImpl.java
===================================================================
--- src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortTypeImpl.java	(revision 10906)
+++ src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortTypeImpl.java	(working copy)
@@ -29,11 +29,11 @@
     /* (non-Javadoc)
      * @see it.csi.marc.services.webservices_1_0.MarcWSPortType#invioOperazioneContabile(it.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo  datiRichiestaOperazioneContabile )*
      */
-    public it.csi.siac.pcc.marc.schema.marccommontypes_1.ResultType invioOperazioneContabile(it.csi.siac.pcc.marc.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo datiRichiestaOperazioneContabile) { 
+    public it.csi.siac.pcc.marc.schema.marccommontypes_1.ResponseType invioOperazioneContabile(it.csi.siac.pcc.marc.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo datiRichiestaOperazioneContabile) { 
         LOG.info("Executing operation invioOperazioneContabile");
         System.out.println(datiRichiestaOperazioneContabile);
         try {
-            it.csi.siac.pcc.marc.schema.marccommontypes_1.ResultType _return = null;
+            it.csi.siac.pcc.marc.schema.marccommontypes_1.ResponseType _return = null;
             return _return;
         } catch (java.lang.Exception ex) {
             ex.printStackTrace();
Index: src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType_MarcSOAP_Client.java
===================================================================
--- src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType_MarcSOAP_Client.java	(revision 10906)
+++ src/main/java/it/csi/siac/pcc/marc/services/webservices_1_0/MarcWSPortType_MarcSOAP_Client.java	(working copy)
@@ -1,6 +1,12 @@
 
 package it.csi.siac.pcc.marc.services.webservices_1_0;
 
+import java.io.File;
+import java.net.MalformedURLException;
+import java.net.URL;
+
+import javax.xml.namespace.QName;
+
 /**
  * Please modify this class to meet your needs
  * This class is not complete
@@ -7,14 +13,15 @@
  */
 
 import it.csi.siac.pcc.marc.schema.marccommontypes_1.ResultType;
+import it.csi.siac.pcc.marc.schema.marcservicestypes_1.InvioOperazioneContabile;
+import it.csi.siac.pcc.marc.tesoro.fatture.DatiRichiestaOperazioneContabileProxyTipo;
+import it.csi.siac.pcc.marc.tesoro.fatture.IdentificazioneGeneraleTipo;
+import it.csi.siac.pcc.marc.tesoro.fatture.IdentificazioneSDITipo;
+import it.csi.siac.pcc.marc.tesoro.fatture.ListaOperazioneTipo;
+import it.csi.siac.pcc.marc.tesoro.fatture.OperazioneTipo;
 import it.csi.siac.pcc.marc.tesoro.fatture.ProxyOperazioneContabileRichiestaTipo;
+import it.csi.siac.pcc.marc.tesoro.fatture.TestataAsyncTipo;
 
-import java.io.File;
-import java.net.MalformedURLException;
-import java.net.URL;
-
-import javax.xml.namespace.QName;
-
 /**
  * This class was generated by Apache CXF 2.4.6
  * 2015-11-03T15:32:08.089+01:00
@@ -23,7 +30,8 @@
  */
 public final class MarcWSPortType_MarcSOAP_Client {
 
-    private static final QName SERVICE_NAME = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcSOAPService");
+//    private static final QName SERVICE_NAME = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcSOAPService");
+    private static final QName SERVICE_NAME = new QName("http://www.csi.it/marc/services/webservices-1.0", "MarcProxyService");
 
     private MarcWSPortType_MarcSOAP_Client() {
     }
@@ -48,10 +56,46 @@
         
         {
         System.out.println("Invoking invioOperazioneContabile...");
-        ProxyOperazioneContabileRichiestaTipo _invioOperazioneContabile_datiRichiestaOperazioneContabile = null;
-        ResultType _invioOperazioneContabile__return = port.invioOperazioneContabile(_invioOperazioneContabile_datiRichiestaOperazioneContabile);
+        ProxyOperazioneContabileRichiestaTipo _invioOperazioneContabile_datiRichiestaOperazioneContabile = new ProxyOperazioneContabileRichiestaTipo();
+        
+        InvioOperazioneContabile _invioOperazioneContabile_parameters = new InvioOperazioneContabile();
+        ProxyOperazioneContabileRichiestaTipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabile = new ProxyOperazioneContabileRichiestaTipo();
+        TestataAsyncTipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta = new TestataAsyncTipo();
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta.setCodiceFiscaleTrasmittente("CodiceFiscaleTrasmittente-340725346");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta.setTimestampTrasmissione(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-04-04T18:30:30.426+02:00"));
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta.setVersioneApplicativa("VersioneApplicativa-209747513");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta.setIdentificativoPCCAmministrazione(Long.valueOf(-4922710867463007090l));
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta.setIdentificativoTransazionePA("IdentificativoTransazionePA123982637");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabile.setTestataRichiesta(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileTestataRichiesta);
+        DatiRichiestaOperazioneContabileProxyTipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta = new DatiRichiestaOperazioneContabileProxyTipo();
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta.setIdentificazionePCC("IdentificazionePCC988556818");
+        IdentificazioneSDITipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneSDI = new IdentificazioneSDITipo();
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneSDI.setLottoSDI(new java.math.BigDecimal("1482821702928294861.8752244679908954564"));
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneSDI.setNumeroFattura("NumeroFattura-2096908264");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta.setIdentificazioneSDI(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneSDI);
+        IdentificazioneGeneraleTipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale = new IdentificazioneGeneraleTipo();
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale.setNumeroFattura("NumeroFattura-1876064742");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale.setDataEmissione(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2016-04-04T18:30:30.427+02:00"));
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale.setImportoTotaleDocumento(new java.math.BigDecimal("2971195935217351501.7849205700165055937"));
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale.setIdFiscaleIvaFornitore("IdFiscaleIvaFornitore-2003036946");
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta.setIdentificazioneGenerale(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaIdentificazioneGenerale);
+        ListaOperazioneTipo _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaListaOperazione = new ListaOperazioneTipo();
+        java.util.List<OperazioneTipo> _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaListaOperazioneOperazione = new java.util.ArrayList<OperazioneTipo>();
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaListaOperazione.getOperazione().addAll(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaListaOperazioneOperazione);
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta.setListaOperazione(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiestaListaOperazione);
+        _invioOperazioneContabile_parametersDatiRichiestaOperazioneContabile.setDatiRichiesta(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta);
+        _invioOperazioneContabile_parameters.setDatiRichiestaOperazioneContabile(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabile);
+        
+        
+        _invioOperazioneContabile_datiRichiestaOperazioneContabile.setDatiRichiesta(_invioOperazioneContabile_parametersDatiRichiestaOperazioneContabileDatiRichiesta);
+        
+        
+        ResultType _invioOperazioneContabile__return = port.invioOperazioneContabile(_invioOperazioneContabile_datiRichiestaOperazioneContabile).getResult();
         System.out.println("invioOperazioneContabile.result=" + _invioOperazioneContabile__return);
 
+        System.out.println("Codice: "+_invioOperazioneContabile__return.getCodice());
+        System.out.println("Messaggio: "+_invioOperazioneContabile__return.getMessaggio());
+        
 
         }
 
